#extends "layout"

#block content
    <title>ZTTP Showcase - WebSocket Chat</title>
    <style>
        #chat-container {
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        #chat-messages {
            height: 400px;
            overflow-y: auto;
            border: 1px solid #ccc;
            padding: 10px;
            margin-bottom: 10px;
            background-color: #f9f9f9;
        }
        .chat-message {
            padding: 8px 12px;
            margin: 5px 0;
            border-radius: 6px;
            max-width: 80%;
            word-wrap: break-word;
        }
        .chat-message.self {
            background-color: #d1ecf1; /* Light blue for self */
            margin-left: auto;
            text-align: right;
        }
        .chat-message.other {
            background-color: #e2e3e5; /* Light grey for others */
            margin-right: auto;
        }
        .chat-message.system {
            background-color: #f8d7da; /* Light red for system messages */
            text-align: center;
            font-style: italic;
        }
        #chat-form {
            display: flex;
            gap: 10px;
        }
        #chat-form input[type="text"] {
            flex: 1;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
            font-size: 16px;
        }
        #chat-form button {
            padding: 10px 20px;
            background-color: #007bff;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        #chat-form button:hover {
            background-color: #0056b3;
        }
    </style>

    <div id="chat-container">
        <h1>Simple WebSocket Chat</h1>
        <p>Powered by ZTTP WebSockets and HTMX.</p>

        <div id="chat-room" hx-ext="ws" ws-connect="/demos/websocket/chat/ws">
            <div id="chat-messages" hx-swap="beforeend">
                <div class="chat-message system">Connecting to chat...</div>
            </div>

            <form id="chat-form" ws-send>
                <input type="text" id="message-input" name="chat_message" placeholder="Type your message..." autocomplete="off" required>
                <button type="submit">Send</button>
            </form>
        </div>
    </div>

    <script>
        // Clear input and append self-message after sending
        document.addEventListener('htmx:wsAfterSend', function(event) {
            const form = event.detail.elt;
            const input = form.querySelector('input[name="chat_message"]');
            const messageText = input.value.trim();

            if (messageText) {
                const messagesContainer = document.getElementById('chat-messages');
                const selfMessage = document.createElement('div');
                selfMessage.className = 'chat-message self';
                selfMessage.textContent = `You: ${messageText}`;
                messagesContainer.appendChild(selfMessage);
                messagesContainer.scrollTop = messagesContainer.scrollHeight;
                input.value = ''; // Clear input
            }
        });

        // Update UI on WebSocket connection
        document.addEventListener('htmx:wsOpen', function() {
            const messagesContainer = document.getElementById('chat-messages');
            const connectingMessage = messagesContainer.querySelector('.chat-message.system');
            if (connectingMessage && connectingMessage.textContent.includes('Connecting')) {
                connectingMessage.textContent = 'Connected!';
                connectingMessage.style.backgroundColor = '#d4edda'; // Light green
                setTimeout(() => {
                    connectingMessage.remove();
                }, 1500);
            }
        });

        // Ensure new messages are visible
        document.addEventListener('htmx:wsAfterMessage', function() {
            const messagesContainer = document.getElementById('chat-messages');
            messagesContainer.scrollTop = messagesContainer.scrollHeight;
        });
    </script>
#endblock
